{
  "name": "Cms",
  "tagline": "a content management system",
  "body": "# CMS-usage\r\n## 1. Database setup.  \r\nCreate a MySQL database called cms. The easiest way of doing this is with PhpMyAdmin. When the database is created, create a new user with a username and password of your choice. This user/password will be used by the application to connect to the database and run the queries. \r\nIn the config.ini file, located in the config folder, fill in your username and password on the correct lines \r\ne.g. `dbname = cms, username = (your username), password = (yourpassword)`  \r\nWhen the application runs first, it performs a check to see if the database is created. If it is created, the app will create  the correct tables for it to run.\r\n## 2. Themes.   \r\nThemes are also handled within the config.ini file. There is a default theme installed already but this can be changed by commenting out the line `theme = default` and filling in whichever theme you want to load. e.g. `theme = blue`. Your theme will need all the templates from the default theme and whichever new templates specific to the new theme. You can add a CSS file to the main CSS folder and link to it from the base.html.twig file of your new theme.  \r\n## 3. Title and background images.\r\nSet the site title and a background image if required from the config.ini file also, using the same method as above.\r\n## 4. Backend section.\r\nThe administrators backend is accessed by `http://<ip address>/admin`  \r\nSo , for example, if using the app on a localhost it would be `http://localhost/admin`  \r\n## 5. Creating pages.\r\nFrom the admin dashboard, choosing the create page option from the menu will display a form with two input fields, page name and template name. Filling these out will automatically create a new web page and a new template for that page. This is a generic template that looks the same as the home page template. To modify this template or use a different template see the section below on modifying templates. Links are generated for the new page on the frontend automatically.   \r\n## 6. Creating templates.\r\nTemplates are created with [twig](http://twig.sensiolabs.org/) and are loaded from the templates folder within the active themes folder. Templates created at the same time as creating a new page are loaded from the database and have the same layout as the home-page. To modify the layout of a template, create a new page and template, and then create a new file within your templates folder with the same name as your template created through the form. The templates will be loaded from the filesystem first and will override the template stored in the database. You can then edit the template accordingly and change the layout to whatever you want.\r\n \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}